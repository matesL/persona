{"ast":null,"code":"var _jsxFileName = \"E:\\\\vsCode\\\\react\\u2014list\\\\my-app\\\\src\\\\pages\\\\ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploadPage() {\n  _s();\n  const [selectedImages, setSelectedImages] = useState([]);\n  function handleImageSelect(event) {\n    const images = Array.from(event.target.files);\n    images.forEach(image => {\n      // Validate image type\n      if (![\"image/jpeg\", \"image/png\"].includes(image.type)) {\n        console.error(`\"${image.name}\" is not a valid image file type.`);\n        return;\n      }\n\n      // Validate image size (maximum 5 MB)\n      if (image.size > 5 * 1024 * 1024) {\n        console.error(`\"${image.name}\" is too large. Maximum file size is 5 MB.`);\n        return;\n      }\n      setSelectedImages(prevImages => [...prevImages, image]);\n    });\n  }\n  async function handleImageUpload() {\n    const formData = new FormData();\n    selectedImages.forEach(image => {\n      formData.append(\"images\", image);\n    });\n    try {\n      const response = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Images uploaded successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Error uploading images:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Upload Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"image-input\",\n      children: [\"Select Images\", /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image-input\",\n        type: \"file\",\n        multiple: true,\n        onChange: handleImageSelect,\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleImageUpload,\n      children: \"Upload Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedImages.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(image),\n          alt: image.name,\n          style: {\n            width: \"200px\",\n            height: \"auto\",\n            margin: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, image.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploadPage, \"H8NCClQcTTYNgFIkNepsXMggwvc=\");\n_c = ImageUploadPage;\nexport default ImageUploadPage;\nvar _c;\n$RefreshReg$(_c, \"ImageUploadPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploadPage","_s","selectedImages","setSelectedImages","handleImageSelect","event","images","Array","from","target","files","forEach","image","includes","type","console","error","name","size","prevImages","handleImageUpload","formData","FormData","append","response","post","headers","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","multiple","onChange","style","display","onClick","map","src","URL","createObjectURL","alt","width","height","margin","_c","$RefreshReg$"],"sources":["E:/vsCode/reactâ€”list/my-app/src/pages/ImageUploader.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction ImageUploadPage() {\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n  function handleImageSelect(event) {\r\n    const images = Array.from(event.target.files);\r\n\r\n    images.forEach((image) => {\r\n      // Validate image type\r\n      if (![\"image/jpeg\", \"image/png\"].includes(image.type)) {\r\n        console.error(`\"${image.name}\" is not a valid image file type.`);\r\n        return;\r\n      }\r\n\r\n      // Validate image size (maximum 5 MB)\r\n      if (image.size > 5 * 1024 * 1024) {\r\n        console.error(`\"${image.name}\" is too large. Maximum file size is 5 MB.`);\r\n        return;\r\n      }\r\n\r\n      setSelectedImages((prevImages) => [...prevImages, image]);\r\n    });\r\n  }\r\n\r\n  async function handleImageUpload() {\r\n    const formData = new FormData();\r\n\r\n    selectedImages.forEach((image) => {\r\n      formData.append(\"images\", image);\r\n    });\r\n\r\n    try {\r\n      const response = await axios.post(\"/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      console.log(\"Images uploaded successfully:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"Error uploading images:\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Image Upload Page</h1>\r\n      <label htmlFor=\"image-input\">\r\n        Select Images\r\n        <input\r\n          id=\"image-input\"\r\n          type=\"file\"\r\n          multiple\r\n          onChange={handleImageSelect}\r\n          style={{ display: \"none\" }}\r\n        />\r\n      </label>\r\n      <button onClick={handleImageUpload}>Upload Images</button>\r\n      <div>\r\n        {selectedImages.map((image) => (\r\n          <div key={image.name}>\r\n            <img\r\n              src={URL.createObjectURL(image)}\r\n              alt={image.name}\r\n              style={{ width: \"200px\", height: \"auto\", margin: \"10px\" }}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUploadPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}