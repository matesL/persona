{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:8080/\";\nconst instance = {\n  baseURL: API_BASE_URL,\n  withCredentials: true // 开启跨域请求\n};\n\nclass AxiosHttp {\n  constructor(config) {\n    this.service = '';\n    this.service = axios.create(config);\n    console.log(\"Ss\");\n    //请求处理\n    this.service.interceptors.request.use(config => {\n      return {\n        ...config,\n        headers: {\n          ...config.headers,\n          token: '22222'\n        }\n      };\n    }, err => {\n      console.log(err);\n    });\n    //响应处理\n    this.service.interceptors.response.use(config => {\n      const {\n        data,\n        code\n      } = config;\n      if (code !== 200) {}\n      return data;\n    }, err => {\n      console.log(err);\n    });\n  }\n  get(url, params, _object) {\n    return this.service.get(url, {\n      params,\n      ..._object\n    });\n  }\n  post(url, params, _object) {\n    return this.service.post(url, params, _object);\n  }\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default new AxiosHttp(instance);","map":{"version":3,"names":["axios","API_BASE_URL","instance","baseURL","withCredentials","AxiosHttp","constructor","config","service","create","console","log","interceptors","request","use","headers","token","err","response","data","code","get","url","params","_object","post"],"sources":["E:/vsCode/react—list/my-app/src/api/request.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE_URL = \"http://localhost:8080/\";\r\nconst instance = {\r\n  baseURL: API_BASE_URL,\r\n  withCredentials: true, // 开启跨域请求\r\n} \r\nclass AxiosHttp {\r\n  service = ''\r\n  constructor(config) {\r\n    this.service = axios.create(config)\r\n    console.log(\"Ss\");\r\n    //请求处理\r\n    this.service.interceptors.request.use(\r\n      (config) => {\r\n\r\n        return { ...config, headers: { ...config.headers, token: '22222' } }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    )\r\n    //响应处理\r\n    this.service.interceptors.response.use(\r\n      (config) => {\r\n        const { data, code } = config\r\n        if (code !== 200) {\r\n\r\n        }\r\n        return data\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n  get(url, params, _object) {\r\n    return this.service.get(url, { params, ..._object })\r\n  }\r\n  post(url, params, _object) {\r\n    return this.service.post(url, params, _object)\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default new AxiosHttp(instance);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,wBAAwB;AAC7C,MAAMC,QAAQ,GAAG;EACfC,OAAO,EAAEF,YAAY;EACrBG,eAAe,EAAE,IAAI,CAAE;AACzB,CAAC;;AACD,MAAMC,SAAS,CAAC;EAEdC,WAAWA,CAACC,MAAM,EAAE;IAAA,KADpBC,OAAO,GAAG,EAAE;IAEV,IAAI,CAACA,OAAO,GAAGR,KAAK,CAACS,MAAM,CAACF,MAAM,CAAC;IACnCG,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB;IACA,IAAI,CAACH,OAAO,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAClCP,MAAM,IAAK;MAEV,OAAO;QAAE,GAAGA,MAAM;QAAEQ,OAAO,EAAE;UAAE,GAAGR,MAAM,CAACQ,OAAO;UAAEC,KAAK,EAAE;QAAQ;MAAE,CAAC;IACtE,CAAC,EACAC,GAAG,IAAK;MACPP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;IAClB,CAAC,CACF;IACD;IACA,IAAI,CAACT,OAAO,CAACI,YAAY,CAACM,QAAQ,CAACJ,GAAG,CACnCP,MAAM,IAAK;MACV,MAAM;QAAEY,IAAI;QAAEC;MAAK,CAAC,GAAGb,MAAM;MAC7B,IAAIa,IAAI,KAAK,GAAG,EAAE,CAElB;MACA,OAAOD,IAAI;IACb,CAAC,EACAF,GAAG,IAAK;MACPP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;IAClB,CAAC,CACF;EACH;EACAI,GAAGA,CAACC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAE;IACxB,OAAO,IAAI,CAAChB,OAAO,CAACa,GAAG,CAACC,GAAG,EAAE;MAAEC,MAAM;MAAE,GAAGC;IAAQ,CAAC,CAAC;EACtD;EACAC,IAAIA,CAACH,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAE;IACzB,OAAO,IAAI,CAAChB,OAAO,CAACiB,IAAI,CAACH,GAAG,EAAEC,MAAM,EAAEC,OAAO,CAAC;EAChD;AACF;;AAEA;AACA,eAAe,IAAInB,SAAS,CAACH,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}