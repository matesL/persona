{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../meetstyle/File.css';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\nimport { Document, Page, pdfjs } from \"react-pdf\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nconst PDFview = _ref => {\n  _s();\n  let {\n    prfUrl\n  } = _ref;\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pageNumberInput, setPageNumberInput] = useState(1);\n  const [pageNumberFocus, setPageNumberFocus] = useState(false);\n  const [numPages, setNumPages] = useState(1);\n  const [pageWidth, setPageWidth] = useState(600);\n  const [fullscreen, setFullscreen] = useState(false);\n  const lastPage = () => {\n    if (pageNumber === 1) {\n      return;\n    }\n    setPageNumber(pageNumber - 1);\n    setPageNumberInput(pageNumber - 1);\n  };\n  const nextPage = () => {\n    if (pageNumber === numPages) {\n      return;\n    }\n    setPageNumber(pageNumber + 1);\n    setPageNumberInput(pageNumber + 1);\n  };\n  const onPageNumberFocus = () => {\n    setPageNumberFocus(true);\n  };\n  const onPageNumberBlur = () => {\n    setPageNumberFocus(false);\n    setPageNumberInput(pageNumber);\n  };\n  const onPageNumberChange = e => {\n    let value = e.target.value;\n    value = value <= 0 ? 1 : value;\n    value = value >= numPages ? numPages : value;\n    setPageNumberInput(value);\n  };\n  const toPage = e => {\n    if (e.keyCode === 13) {\n      setPageNumber(Number(e.target.value));\n    }\n  };\n};\n_s(PDFview, \"1g09EzUklZz/q7y0W+1gv5Hv1mg=\");\n_c = PDFview;\nexport default PDFview;\nvar _c;\n$RefreshReg$(_c, \"PDFview\");","map":{"version":3,"names":["React","useState","Document","Page","pdfjs","GlobalWorkerOptions","workerSrc","version","PDFview","_ref","_s","prfUrl","pageNumber","setPageNumber","pageNumberInput","setPageNumberInput","pageNumberFocus","setPageNumberFocus","numPages","setNumPages","pageWidth","setPageWidth","fullscreen","setFullscreen","lastPage","nextPage","onPageNumberFocus","onPageNumberBlur","onPageNumberChange","e","value","target","toPage","keyCode","Number","_c","$RefreshReg$"],"sources":["E:/vsCode/reactâ€”list/my-app/src/pages/PDFview.jsx"],"sourcesContent":["\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport '../meetstyle/File.css';\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\n\r\n\r\nconst PDFview = ({ prfUrl }) => {\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [pageNumberInput, setPageNumberInput] = useState(1);\r\n    const [pageNumberFocus, setPageNumberFocus] = useState(false);\r\n    const [numPages, setNumPages] = useState(1);\r\n    const [pageWidth, setPageWidth] = useState(600);\r\n    const [fullscreen, setFullscreen] = useState(false);\r\n  \r\n    const lastPage = () => {\r\n      if (pageNumber === 1) {\r\n        return;\r\n      }\r\n      setPageNumber(pageNumber - 1);\r\n      setPageNumberInput(pageNumber - 1);\r\n    };\r\n  \r\n    const nextPage = () => {\r\n      if (pageNumber === numPages) {\r\n        return;\r\n      }\r\n      setPageNumber(pageNumber + 1);\r\n      setPageNumberInput(pageNumber + 1);\r\n    };\r\n  \r\n    const onPageNumberFocus = () => {\r\n      setPageNumberFocus(true);\r\n    };\r\n  \r\n    const onPageNumberBlur = () => {\r\n      setPageNumberFocus(false);\r\n      setPageNumberInput(pageNumber);\r\n    };\r\n  \r\n    const onPageNumberChange = (e) => {\r\n      let value = e.target.value;\r\n      value = value <= 0 ? 1 : value;\r\n      value = value >= numPages ? numPages : value;\r\n      setPageNumberInput(value);\r\n    };\r\n    const toPage = (e) => {\r\n        if (e.keyCode === 13) {\r\n          setPageNumber(Number(e.target.value));\r\n        }\r\n      };\r\n}\r\nexport default PDFview;\r\n"],"mappings":";AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,uBAAuB;AAC9B,OAAO,6CAA6C;AACpD,SAASC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,QAAQ,WAAW;AAEjDA,KAAK,CAACC,mBAAmB,CAACC,SAAS,GAAI,2CAA0CF,KAAK,CAACG,OAAQ,gBAAe;AAI9G,MAAMC,OAAO,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACvB,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,GAAG,CAAC;EAC/C,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMuB,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIZ,UAAU,KAAK,CAAC,EAAE;MACpB;IACF;IACAC,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;IAC7BG,kBAAkB,CAACH,UAAU,GAAG,CAAC,CAAC;EACpC,CAAC;EAED,MAAMa,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIb,UAAU,KAAKM,QAAQ,EAAE;MAC3B;IACF;IACAL,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;IAC7BG,kBAAkB,CAACH,UAAU,GAAG,CAAC,CAAC;EACpC,CAAC;EAED,MAAMc,iBAAiB,GAAGA,CAAA,KAAM;IAC9BT,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC7BV,kBAAkB,CAAC,KAAK,CAAC;IACzBF,kBAAkB,CAACH,UAAU,CAAC;EAChC,CAAC;EAED,MAAMgB,kBAAkB,GAAIC,CAAC,IAAK;IAChC,IAAIC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC1BA,KAAK,GAAGA,KAAK,IAAI,CAAC,GAAG,CAAC,GAAGA,KAAK;IAC9BA,KAAK,GAAGA,KAAK,IAAIZ,QAAQ,GAAGA,QAAQ,GAAGY,KAAK;IAC5Cf,kBAAkB,CAACe,KAAK,CAAC;EAC3B,CAAC;EACD,MAAME,MAAM,GAAIH,CAAC,IAAK;IAClB,IAAIA,CAAC,CAACI,OAAO,KAAK,EAAE,EAAE;MACpBpB,aAAa,CAACqB,MAAM,CAACL,CAAC,CAACE,MAAM,CAACD,KAAK,CAAC,CAAC;IACvC;EACF,CAAC;AACP,CAAC;AAAApB,EAAA,CA5CKF,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AA6Cb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}