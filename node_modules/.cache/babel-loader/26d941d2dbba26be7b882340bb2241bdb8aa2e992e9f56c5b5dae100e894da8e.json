{"ast":null,"code":"var _jsxFileName = \"E:\\\\vsCode\\\\react\\u2014list\\\\my-app\\\\src\\\\pages\\\\uploadimage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploader() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  // 处理图片选择事件\n  const handleFileInputChange = event => {\n    const file = event.target.files[0];\n    previewFile(file);\n  };\n\n  // 预览图片并更新状态\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n      setSelectedFile(file);\n    };\n  };\n\n  // 处理图片上传事件\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    if (!selectedFile) {\n      setErrorMsg(\"请选择图片文件\");\n      return;\n    }\n    const fileSize = selectedFile.size / 1024 / 1024; // 转换为MB\n    if (fileSize > 5) {\n      setErrorMsg(\"图片文件大小不能超过5MB\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"image\", selectedFile);\n    try {\n      await axios.post(\"/api/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      // 上传成功，清空状态\n      setSelectedFile(null);\n      setPreviewSource(\"\");\n      setErrorMsg(\"\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: handleFileInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u4E0A\\u4F20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), previewSource && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewSource,\n      alt: \"\\u9884\\u89C8\",\n      style: {\n        maxWidth: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploader, \"wc9pLZdKvVq95xRyoAAhUwQjDmM=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploader","_s","selectedFile","setSelectedFile","previewSource","setPreviewSource","errorMsg","setErrorMsg","handleFileInputChange","event","file","target","files","previewFile","reader","FileReader","readAsDataURL","onloadend","result","handleFormSubmit","preventDefault","fileSize","size","formData","FormData","append","post","headers","error","console","children","onSubmit","type","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","maxWidth","color","_c","$RefreshReg$"],"sources":["E:/vsCode/react—list/my-app/src/pages/uploadimage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction ImageUploader() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [previewSource, setPreviewSource] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  // 处理图片选择事件\r\n  const handleFileInputChange = (event) => {\r\n    const file = event.target.files[0];\r\n    previewFile(file);\r\n  };\r\n\r\n  // 预览图片并更新状态\r\n  const previewFile = (file) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      setPreviewSource(reader.result);\r\n      setSelectedFile(file);\r\n    };\r\n  };\r\n\r\n  // 处理图片上传事件\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!selectedFile) {\r\n      setErrorMsg(\"请选择图片文件\");\r\n      return;\r\n    }\r\n    const fileSize = selectedFile.size / 1024 / 1024; // 转换为MB\r\n    if (fileSize > 5) {\r\n      setErrorMsg(\"图片文件大小不能超过5MB\");\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    formData.append(\"image\", selectedFile);\r\n    try {\r\n      await axios.post(\"/api/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      // 上传成功，清空状态\r\n      setSelectedFile(null);\r\n      setPreviewSource(\"\");\r\n      setErrorMsg(\"\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <input type=\"file\" name=\"image\" onChange={handleFileInputChange} />\r\n        <button type=\"submit\">上传</button>\r\n      </form>\r\n      {previewSource && (\r\n        <img src={previewSource} alt=\"预览\" style={{ maxWidth: \"500px\" }} />\r\n      )}\r\n      {errorMsg && <p style={{ color: \"red\" }}>{errorMsg}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUploader;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}