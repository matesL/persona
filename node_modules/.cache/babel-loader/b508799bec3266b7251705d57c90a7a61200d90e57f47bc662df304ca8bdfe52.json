{"ast":null,"code":"var _jsxFileName = \"E:\\\\vsCode\\\\react\\u2014list\\\\my-app\\\\src\\\\pages\\\\ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../meetstyle/ImageUploader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploader() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const handleFileInput = e => {\n    setSelectedFiles([...selectedFiles, ...e.target.files]);\n  };\n  const handleRemove = fileToRemove => {\n    const filteredFiles = selectedFiles.filter(file => file !== fileToRemove);\n    setSelectedFiles(filteredFiles);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append(\"images\", selectedFiles[i]);\n    }\n    try {\n      await axios.post(\"http://your-api-endpoint.com/upload\", formData);\n      alert(\"Images uploaded successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Error uploading images\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploader-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageUpload\",\n        children: \"\\u9884\\u89C8\\u56FE\\u7247\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"upload-button\",\n        children: \"\\u4E0A\\u4F20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview-container\",\n      children: selectedFiles.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(file),\n          alt: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: () => handleRemove(file),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, file.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploader, \"6iJwk1gH4hB0xa84T6RYQXjKu58=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploader","_s","selectedFiles","setSelectedFiles","handleFileInput","e","target","files","handleRemove","fileToRemove","filteredFiles","filter","file","handleSubmit","preventDefault","formData","FormData","i","length","append","post","alert","err","console","error","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","map","src","URL","createObjectURL","alt","name","onClick","_c","$RefreshReg$"],"sources":["E:/vsCode/react—list/my-app/src/pages/ImageUploader.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../meetstyle/ImageUploader.css\";\r\n\r\nfunction ImageUploader() {\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleFileInput = (e) => {\r\n    setSelectedFiles([...selectedFiles, ...e.target.files]);\r\n  };\r\n\r\n  const handleRemove = (fileToRemove) => {\r\n    const filteredFiles = selectedFiles.filter((file) => file !== fileToRemove);\r\n    setSelectedFiles(filteredFiles);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    for (let i = 0; i < selectedFiles.length; i++) {\r\n      formData.append(\"images\", selectedFiles[i]);\r\n    }\r\n\r\n    try {\r\n      await axios.post(\"http://your-api-endpoint.com/upload\", formData);\r\n      alert(\"Images uploaded successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error uploading images\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"uploader-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"imageUpload\">预览图片</label>\r\n        {/* <input\r\n          type=\"file\"\r\n          id=\"imageUpload\"\r\n          name=\"imageUpload\"\r\n          accept=\".jpg, .jpeg, .png\"\r\n          multiple\r\n          onChange={handleFileInput}\r\n        /> */}\r\n        <button type=\"submit\" className=\"upload-button\">\r\n          上传\r\n        </button>\r\n      </form>\r\n      <div className=\"image-preview-container\">\r\n        {selectedFiles.map((file) => (\r\n          <div className=\"image-preview\" key={file.name}>\r\n            <img src={URL.createObjectURL(file)} alt={file.name} />\r\n            <button className=\"remove-button\" onClick={() => handleRemove(file)}>\r\n              Remove\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUploader;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}