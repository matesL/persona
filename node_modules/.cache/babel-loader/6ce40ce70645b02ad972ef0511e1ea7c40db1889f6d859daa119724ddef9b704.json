{"ast":null,"code":"var _jsxFileName = \"E:\\\\vsCode\\\\react\\u2014list\\\\my-app\\\\src\\\\pages\\\\ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUploader() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const handleFileInput = e => {\n    setSelectedFiles(e.target.files);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    for (let i = 0; i < selectedFiles.length; i++) {\n      formData.append(\"images\", selectedFiles[i]);\n    }\n    try {\n      await axios.post(\"http://your-api-endpoint.com/upload\", formData);\n      alert(\"Images uploaded successfully!\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Error uploading images\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageUpload\",\n        children: \"Select images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"imageUpload\",\n        name: \"imageUpload\",\n        accept: \".jpg, .jpeg, .png\",\n        multiple: true,\n        onChange: handleFileInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUploader, \"6iJwk1gH4hB0xa84T6RYQXjKu58=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploader","_s","selectedFiles","setSelectedFiles","handleFileInput","e","target","files","handleSubmit","preventDefault","formData","FormData","i","length","append","post","alert","err","console","error","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","accept","multiple","onChange","_c","$RefreshReg$"],"sources":["E:/vsCode/reactâ€”list/my-app/src/pages/ImageUploader.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction ImageUploader() {\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleFileInput = (e) => {\r\n    setSelectedFiles(e.target.files);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n\r\n    for (let i = 0; i < selectedFiles.length; i++) {\r\n      formData.append(\"images\", selectedFiles[i]);\r\n    }\r\n\r\n    try {\r\n      await axios.post(\"http://your-api-endpoint.com/upload\", formData);\r\n      alert(\"Images uploaded successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Error uploading images\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"imageUpload\">Select images:</label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"imageUpload\"\r\n          name=\"imageUpload\"\r\n          accept=\".jpg, .jpeg, .png\"\r\n          multiple\r\n          onChange={handleFileInput}\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUploader;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMQ,eAAe,GAAIC,CAAC,IAAK;IAC7BF,gBAAgB,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,EAAE;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAE/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,aAAa,CAACW,MAAM,EAAED,CAAC,EAAE,EAAE;MAC7CF,QAAQ,CAACI,MAAM,CAAC,QAAQ,EAAEZ,aAAa,CAACU,CAAC,CAAC,CAAC;IAC7C;IAEA,IAAI;MACF,MAAMf,KAAK,CAACkB,IAAI,CAAC,qCAAqC,EAAEL,QAAQ,CAAC;MACjEM,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBD,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAqB,QAAA,eACErB,OAAA;MAAMsB,QAAQ,EAAEb,YAAa;MAAAY,QAAA,gBAC3BrB,OAAA;QAAOuB,OAAO,EAAC,aAAa;QAAAF,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACnD3B,OAAA;QACE4B,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,aAAa;QAChBC,IAAI,EAAC,aAAa;QAClBC,MAAM,EAAC,mBAAmB;QAC1BC,QAAQ;QACRC,QAAQ,EAAE5B;MAAgB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1B,eACF3B,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAChC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAACzB,EAAA,CAxCQD,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AA0CtB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}